import models
import pipeline
import tensorflow as tf
from tensorflow.keras.layers import TextVectorization, Embedding

pipe = pipeline.Pipeline()

embedding_dim = 16

vocabulary = set()
vectorizer = TextVectorization(standardize="lower", output_mode='int')

sem = models.simple_embedding_model(vectorizer, 500, embedding_dim, 15)  # Initialise prediction function.

print(sem.summary())

print(f"vocabulary set size: {len(vocabulary)}")
print(f"vectorizer vocabulary set size: {vectorizer.vocabulary_size()}")
print(f"vocabulary of vectorizer inside model: {sem.get_layer('text_vectorization').vocabulary_size()}")

for i in range(5):
    print(f"Iteration: {i}")
    sample = pipe.get_next_data_item()

    # Unpack data from pipe.
    input_api_seq = [" ".join(sample[0])]
    expected_output = sample[1]

    vocabulary.update(sample[0])

    vectorizer.set_vocabulary(list(vocabulary))

    print(f"vocabulary set size: {len(vocabulary)}")
    print(f"vectorizer vocabulary set size: {vectorizer.vocabulary_size()}")
    print(f"vocabulary of vectorizer inside model: {sem.get_layer('text_vectorization').vocabulary_size()}")

print(vocabulary)
print(vectorizer.get_vocabulary())
